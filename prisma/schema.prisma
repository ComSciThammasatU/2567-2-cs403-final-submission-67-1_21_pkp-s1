
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User{
  id String @id @default(uuid())
  email String @unique
  password String
  fullname String?
  lastname String?
  phone String?
  address String?
  gender Gender?
  birth_date  DateTime?
  user_picture String?
  role String  @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  

  adoptionRequests AdoptionRequest[] 
}

model Shelter{
  id String @id @default(uuid())
  email String @unique
  password String
  name String
  phone String?
  address String?
  social_media String?
  shelter_picture String?
  role String  @default("shelter")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dogs Dog[]
}

model Dog {
  id             String   @id @default(uuid())
  name           String 
  breedId        String? 
  breed          Breed?  @relation(fields: [breedId],references: [id])
  customBreed    String? 
  gender         String
  estimatedAge   Int     
  estimatedYear  Int  
  size	         DogSize
  vaccinated     VaccinationStatus @default(UNKNOWN)
  neutered       Boolean
  otherIllnesses String?
  description    String?
  dogImage       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  shelter        Shelter  @relation(fields: [shelterId], references: [id])
  shelterId      String
  adoptionRequests AdoptionRequest[]
}

model Breed {
  id    String  @id @default(uuid())
  name  String  @unique
  dogs  Dog[]   
}

enum VaccinationStatus {
  COMBINED      
  RABIES       
  BOTH          
  UNKNOWN       
}
enum DogSize {
  SMALL
  MEDIUM
  LARGE
}

model QuestionCategory {
  id        String   @id @default(uuid())
  title     String     
  questions Question[]
}

model Question {
  id           String          @id @default(uuid())
  category     QuestionCategory @relation(fields: [categoryId], references: [id])
  categoryId   String
  text         String         
  inputType    InputType      
  options      String[]       
  answers Answer[]
}

model AdoptionRequest {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  dog       Dog      @relation(fields: [dogId], references: [id])
  dogId     String
  answers   Answer[]
  status    RequestStatus @default(PENDING)
  createdAt DateTime      @default(now())
}

model Answer {
  id          String          @id @default(uuid())
  request     AdoptionRequest @relation(fields: [requestId], references: [id])
  requestId   String
  question    Question        @relation(fields: [questionId], references: [id])
  questionId  String
  answerText  String
}

enum InputType {
  TEXT     
  RADIO     
  SELECT    
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

model Article {
  id String @id @default(uuid())
  title String
  content String @db.Text
  image String
  createdAt DateTime @default(now())
}